DDL(Data Definition Language) -	   	CREATE , ALTER , DROP , TRUNCATE , RENAME
DML(Data Manipulation Language) -  	INSERT , UPDATE , DELETE , MERGE
DCL(Data Control Language)- 	   	GRANT , REVOKE
TCL(Transaction Control Language) - 	COMMIT , ROLLBACK , SAVE POINT
DQL(Data Quewry Language) -		SELECT

Aggregate functions - 			min, max, count, avg, sum

NOT NULL
Truncate 



=====================================================================================================================================================================
								   TABLE AND DATABASE CREATION
=====================================================================================================================================================================

----------------------------------------------------------------
SHOW :
	SHOW DATABASES;
	SHOW TABLES;
----------------------------------------------------------------
Create a data base named SQL1.db
USE SQL1.db;
----------------------------------------------------------------
CREATE :
CREATE TABLE EMP
(
	empID 	INTEGER 	UNIQUE,
	ename 	TEXT,
	sal 	FLOAT,
);

-----------------------------------------------------------------
DESC EMPLOYEE;
SELECT * FROM EMPLOYEE;
INSERT INTO EMPLOYEE VALUES(1,'DRJ',1000.0);
INSERT INTO EMPLOYEE VALUES(2,'CND',4000.0);
INSERT INTO EMPLOYEE VALUES(3,'RAM',2000.0);
SELECT * FROM EMPLOYEE;
-----------------------------------------------------------------
ALTER TABLE EMPLOYEE ADD age INTEGER;
SELECT * FROM EMPLOYEE;
-----------------------------------------------------------------
INSERT INTO EMPLOYEE VALUES(4,'SAM',2700.0,38);
INSERT INTO EMPLOYEE VALUES(5,'DRJ',2700.0,40);
SELECT * FROM EMPLOYEE;
-----------------------------------------------------------------
UPDATE EMPLOYEE SET age=24 WHERE empID=1;
UPDATE EMPLOYEE SET age=44 WHERE empID=2;
UPDATE EMPLOYEE SET age=30 WHERE empID=3;
SELECT * FROM EMPLOYEE;
-----------------------------------------------------------------
SELECT empID,ename FROM EMPLOYEE;
SELECT empID AS ID,ename AS NAME FROM EMPLOYEE;
SELECT * FROM EMPLOYEE;
-----------------------------------------------------------------
UPDATE EMPLOYEE SET age=NULL WHERE age<30;
SELECT * FROM EMPLOYEE;
-----------------------------------------------------------------
INSERT INTO EMPLOYEE(age) VALUES(1);
SELECT * FROM EMPLOYEE;
-----------------------------------------------------------------
DELETE FROM EMPLOYEE WHERE age=1;
SELECT * FROM EMPLOYEE;



=====================================================================================================================================================================
									MAIN SQL COMMANDS
=====================================================================================================================================================================

ALTER - ADD,DROP,RENAME
		ALTER TABLE EMPLOYEE ADD COLUMN tempcol INTEGER;
			SELECT * FROM EMPLOYEE;
		ALTER TABLE EMPLOYEE DROP COLUMN tempcol;
			SELECT * FROM EMPLOYEE;
		ALTER TABLE EMPLOYEE RENAME COLUMN AGE TO age;
			SELECT * FROM EMPLOYEE;

----------------------------------------------------------------------------------------------------------------------------------------------------
UPDATE - SET
		UPDATE EMPLOYEE SET age=NULL WHERE age<30;
			SELECT * FROM EMPLOYEE;
		UPDATE EMPLOYEE SET age=25 WHERE age IS NULL;
			INSERT INTO EMPLOYEE(age) VALUES(1);
			SELECT * FROM EMPLOYEE;
		UPDATE EMPLOYEE SET empID=6 WHERE ename IS NULL;
			SELECT * FROM EMPLOYEE;
			SELECT * FROM EMPLOYEE;
----------------------------------------------------------------------------------------------------------------------------------------------------
DELETE - 
	DELETE FROM EMPLOYEE WHERE sal IS NULL;
		SELECT * FROM EMPLOYEE;
----------------------------------------------------------------------------------------------------------------------------------------------------
TRUNCATE -
	TRUNCATE TABLE EMPLOYEE;
----------------------------------------------------------------------------------------------------------------------------------------------------
WHERE -
	SELECT * FROM EMPLOYEE WHERE AGE>30;
	SELECT count(*) FROM EMPLOYEE WHERE AGE>30;
		SELECT * FROM EMPLOYEE;
	SELECT * FROM EMPLOYEE WHERE AGE>30 AND age<40;
	SELECT * FROM EMPLOYEE WHERE AGE>=30 AND age<=40;
	SELECT * FROM EMPLOYEE WHERE AGE BETWEEN 30 AND 40;
	SELECT * FROM EMPLOYEE WHERE ename='DRJ';
	SELECT count(*) FROM EMPLOYEE WHERE ename='DRJ';
	SELECT ename,count(*) FROM EMPLOYEE GROUP BY ename HAVING COUNT(*) >= 1;
	SELECT empid,ename,count(*) FROM EMPLOYEE GROUP BY ename HAVING COUNT(*) >= 1;
-----------------------------------------------------------------------------------------------------------------------------------------------------
ORDER BY - ASC, DESC
		SELECT * FROM EMPLOYEE WHERE AGE>30 ORDER BY sal DESC;
		SELECT * FROM EMPLOYEE WHERE AGE>30 ORDER BY sal ASC;
		SELECT empid,ename,count(*) FROM EMPLOYEE GROUP BY ename HAVING COUNT(*) >= 1 ORDER BY empID;
		SELECT empid,ename,count(*) FROM EMPLOYEE GROUP BY ename HAVING COUNT(*) >= 1 ORDER BY empID DESC;
		SELECT ename as NAME,sal AS SALLARY FROM (SELECT * FROM EMPLOYEE WHERE AGE>30) ORDER BY sal;
-----------------------------------------------------------------------------------------------------------------------------------------------------
GROUP BY -
	SELECT ename,count(*) FROM EMPLOYEE GROUP BY ename HAVING COUNT(*) >= 1;
	SELECT ename,count(*) FROM EMPLOYEE GROUP by ename;
-----------------------------------------------------------------------------------------------------------------------------------------------------	
DISTINCT -
	SELECT DISTINCT ename FROM EMPLOYEE;
-----------------------------------------------------------------------------------------------------------------------------------------------------
AGGREGATE - sum, max, min, avg, count
		SELECT sum(sal) FROM EMPLOYEE WHERE age>=40;
		SELECT max(sal) FROM EMPLOYEE WHERE age>=40;
		SELECT min(sal) FROM EMPLOYEE WHERE age>=40;
		SELECT avg(sal) FROM EMPLOYEE WHERE age>=40;
		SELECT count(*) FROM EMPLOYEE WHERE age>=40;
		SELECT count(*) FROM EMPLOYEE;
-----------------------------------------------------------------------------------------------------------------------------------------------------
SUBQUERY -
	SELECT ename,sal FROM (SELECT * FROM EMPLOYEE WHERE AGE>30);
	SELECT ename as NAME,sal AS SALLARY FROM (SELECT * FROM EMPLOYEE WHERE AGE>30) ORDER BY sal;
	SELECT ename as NAME,sal AS SALLARY FROM (SELECT ename,sal FROM EMPLOYEE WHERE AGE>30) ORDER BY sal;
	SELECT ename as NAME,sal-(sal*0.02) AS DEDUCTED_SALLARY FROM (SELECT ename,sal FROM EMPLOYEE WHERE AGE>30) ORDER BY sal;
-----------------------------------------------------------------------------------------------------------------------------------------------------
IN -
	SELECT * FROM EMPLOYEE WHERE ename IN ('DRJ');
	SELECT * FROM EMPLOYEE WHERE ename IN ('CND');
	SELECT * FROM EMPLOYEE WHERE ename IN ('DRJ','CND','RAM');
-----------------------------------------------------------------------------------------------------------------------------------------------------
HAVING -
	SELECT ename,count(*) FROM EMPLOYEE GROUP BY ename HAVING COUNT(*) >= 1;
	SELECT * FROM EMPLOYEE GROUP by age HAVING age>30 and sal>3000;
-----------------------------------------------------------------------------------------------------------------------------------------------------
AND -	
	SELECT * FROM EMPLOYEE WHERE age>30 and sal>3000;
	SELECT * FROM EMPLOYEE WHERE age>30 and age<45;
	SELECT * FROM EMPLOYEE WHERE age>=30 and age<=45;
-----------------------------------------------------------------------------------------------------------------------------------------------------
BETWEEN -
	SELECT * FROM EMPLOYEE WHERE age BETWEEN 30 and 45;
-----------------------------------------------------------------------------------------------------------------------------------------------------
LIKE - 
	SELECT * FROM EMPLOYEE WHERE ename like '%D';
	SELECT * FROM EMPLOYEE WHERE ename like 'D%';
-----------------------------------------------------------------------------------------------------------------------------------------------------
IS NULL and NOT NULL -
		ALTER TABLE EMPLOYEE ADD experience INTEGER;
	SELECT empID,ename,age FROM EMPLOYEE WHERE experience IS NULL;
		UPDATE EMPLOYEE SET experience=10 WHERE empID=1;
		UPDATE EMPLOYEE SET experience=10 WHERE empID=2;
		UPDATE EMPLOYEE SET experience=10 WHERE empID=3;
		SELECT * FROM EMPLOYEE;
	UPDATE EMPLOYEE SET experience=5 WHERE experience IS NULL;
	UPDATE EMPLOYEE SET experience=10 WHERE experience IS NOT NULL;
	UPDATE EMPLOYEE SET experience=20 WHERE experience IS NULL;
		SELECT * FROM EMPLOYEE;
		ALTER TABLE EMPLOYEE DROP experience;
		SELECT * FROM EMPLOYEE;
-----------------------------------------------------------------------------------------------------------------------------------------------------

============================================================================================================
SELECT count(*) FROM EMPLOYEE WHERE ename=(SELECT ename FROM EMPLOYEE);
SELECT ename FROM EMPLOYEE;
SELECT count(*) FROM EMPLOYEE WHERE ename IN (SELECT ename FROM EMPLOYEE);
SELECT AGE FROM EMPLOYEE GROUP BY AGE HAVING COUNT(*) >= 1;
ALTER TABLE EMPLOYEE RENAME employee;
SELECT * FROM employee;
ALTER TABLE employee RENAME EMPLOYEE;
SELECT * FROM EMPLOYEE;