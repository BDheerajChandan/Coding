<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0425.1340                               -->
<workbook original-version='18.1' source-build='2024.1.2 (20241.24.0425.1340)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (sales_data_1)' inline='true' name='federated.1f77i8j0u3ts4e1g497xv0kfptq0' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='train' name='excel-direct.1u6duvn0ooqf9j16741p60z18u2s'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/KIIT/Desktop/DV data/train.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Final_Marks_PGDBDA_March2024' name='excel-direct.08hlix31agqav91h8h1fr11eg88s'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/KIIT/Desktop/Personal _2/GitHub/Coding/ML/Dataset FIles/Result_Datasets/Final_Marks_PGDBDA_March2024.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1u6duvn0ooqf9j16741p60z18u2s' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:S9801:no:A1:S9801:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='Row ID' ordinal='1' />
            <column datatype='string' name='Order ID' ordinal='2' />
            <column datatype='string' name='Order Date' ordinal='3' />
            <column datatype='string' name='Ship Date' ordinal='4' />
            <column datatype='string' name='Ship Mode' ordinal='5' />
            <column datatype='string' name='Customer ID' ordinal='6' />
            <column datatype='string' name='Customer Name' ordinal='7' />
            <column datatype='string' name='Segment' ordinal='8' />
            <column datatype='string' name='Country' ordinal='9' />
            <column datatype='string' name='City' ordinal='10' />
            <column datatype='string' name='State' ordinal='11' />
            <column datatype='integer' name='Postal Code' ordinal='12' />
            <column datatype='string' name='Region' ordinal='13' />
            <column datatype='string' name='Product ID' ordinal='14' />
            <column datatype='string' name='Category' ordinal='15' />
            <column datatype='string' name='Sub-Category' ordinal='16' />
            <column datatype='string' name='Product Name' ordinal='17' />
            <column datatype='real' name='Sales' ordinal='18' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1u6duvn0ooqf9j16741p60z18u2s' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:S9801:no:A1:S9801:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='Row ID' ordinal='1' />
            <column datatype='string' name='Order ID' ordinal='2' />
            <column datatype='string' name='Order Date' ordinal='3' />
            <column datatype='string' name='Ship Date' ordinal='4' />
            <column datatype='string' name='Ship Mode' ordinal='5' />
            <column datatype='string' name='Customer ID' ordinal='6' />
            <column datatype='string' name='Customer Name' ordinal='7' />
            <column datatype='string' name='Segment' ordinal='8' />
            <column datatype='string' name='Country' ordinal='9' />
            <column datatype='string' name='City' ordinal='10' />
            <column datatype='string' name='State' ordinal='11' />
            <column datatype='integer' name='Postal Code' ordinal='12' />
            <column datatype='string' name='Region' ordinal='13' />
            <column datatype='string' name='Product ID' ordinal='14' />
            <column datatype='string' name='Category' ordinal='15' />
            <column datatype='string' name='Sub-Category' ordinal='16' />
            <column datatype='string' name='Product Name' ordinal='17' />
            <column datatype='real' name='Sales' ordinal='18' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:S9801:no:A1:S9801:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9759B647DB3F45EC8AF8975EA5E8CBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9759B647DB3F45EC8AF8975EA5E8CBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9759B647DB3F45EC8AF8975EA5E8CBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9759B647DB3F45EC8AF8975EA5E8CBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9759B647DB3F45EC8AF8975EA5E8CBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9759B647DB3F45EC8AF8975EA5E8CBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9759B647DB3F45EC8AF8975EA5E8CBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9759B647DB3F45EC8AF8975EA5E8CBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9759B647DB3F45EC8AF8975EA5E8CBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9759B647DB3F45EC8AF8975EA5E8CBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9759B647DB3F45EC8AF8975EA5E8CBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9759B647DB3F45EC8AF8975EA5E8CBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9759B647DB3F45EC8AF8975EA5E8CBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9759B647DB3F45EC8AF8975EA5E8CBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9759B647DB3F45EC8AF8975EA5E8CBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9759B647DB3F45EC8AF8975EA5E8CBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9759B647DB3F45EC8AF8975EA5E8CBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9759B647DB3F45EC8AF8975EA5E8CBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9759B647DB3F45EC8AF8975EA5E8CBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Sales &lt; 1000' datatype='boolean' name='[Calculation_595319641157259266]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Sales] &lt; 10' />
      </column>
      <column caption='Top 10' datatype='boolean' name='[Calculation_595319641157980163]' role='measure' type='nominal'>
        <calculation class='tableau' formula='INDEX()&lt;10'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_9759B647DB3F45EC8AF8975EA5E8CBE8]' role='measure' type='quantitative' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/KIIT/AppData/Local/Temp/TableauTemp/#TableauTemp_1mol7z6073b4fx1dm5mnl1srx1qs.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='09/25/2024 06:10:06 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9800</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9759B647DB3F45EC8AF8975EA5E8CBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Row ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Row ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Row ID</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9800</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9759B647DB3F45EC8AF8975EA5E8CBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Order ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order ID</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3166</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9759B647DB3F45EC8AF8975EA5E8CBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order Date</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Order Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order Date</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1418</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9759B647DB3F45EC8AF8975EA5E8CBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Date</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Ship Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ship Date</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1498</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9759B647DB3F45EC8AF8975EA5E8CBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Mode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Ship Mode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ship Mode</remote-alias>
              <ordinal>5</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9759B647DB3F45EC8AF8975EA5E8CBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Customer ID</remote-alias>
              <ordinal>6</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1083</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9759B647DB3F45EC8AF8975EA5E8CBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Customer Name</remote-alias>
              <ordinal>7</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1083</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9759B647DB3F45EC8AF8975EA5E8CBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Segment</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Segment]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Segment</remote-alias>
              <ordinal>8</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9759B647DB3F45EC8AF8975EA5E8CBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>9</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9759B647DB3F45EC8AF8975EA5E8CBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>10</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>515</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9759B647DB3F45EC8AF8975EA5E8CBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>11</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>55</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9759B647DB3F45EC8AF8975EA5E8CBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Postal Code</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Postal Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Postal Code</remote-alias>
              <ordinal>12</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>613</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9759B647DB3F45EC8AF8975EA5E8CBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>13</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9759B647DB3F45EC8AF8975EA5E8CBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product ID</remote-alias>
              <ordinal>14</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2074</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9759B647DB3F45EC8AF8975EA5E8CBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Category</remote-alias>
              <ordinal>15</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9759B647DB3F45EC8AF8975EA5E8CBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sub-Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Sub-Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sub-Category</remote-alias>
              <ordinal>16</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9759B647DB3F45EC8AF8975EA5E8CBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product Name</remote-alias>
              <ordinal>17</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2035</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9759B647DB3F45EC8AF8975EA5E8CBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sales</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Sales]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sales</remote-alias>
              <ordinal>18</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3430</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9759B647DB3F45EC8AF8975EA5E8CBE8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Sub-Category:nk]' palette='blue_red_brown_10_0' type='palette'>
            <map to='#466f9d'>
              <bucket>&quot;Accessories&quot;</bucket>
            </map>
            <map to='#466f9d'>
              <bucket>&quot;Bookcases&quot;</bucket>
            </map>
            <map to='#466f9d'>
              <bucket>&quot;Paper&quot;</bucket>
            </map>
            <map to='#91b3d7'>
              <bucket>&quot;Appliances&quot;</bucket>
            </map>
            <map to='#91b3d7'>
              <bucket>&quot;Chairs&quot;</bucket>
            </map>
            <map to='#91b3d7'>
              <bucket>&quot;Copiers&quot;</bucket>
            </map>
            <map to='#a0d4ee'>
              <bucket>&quot;Envelopes&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tables&quot;</bucket>
            </map>
            <map to='#ba7e45'>
              <bucket>&quot;Fasteners&quot;</bucket>
            </map>
            <map to='#c8133b'>
              <bucket>&quot;Labels&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;Art&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;Furnishings&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;Machines&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;Storage&quot;</bucket>
            </map>
            <map to='#feb5a2'>
              <bucket>&quot;Binders&quot;</bucket>
            </map>
            <map to='#feb5a2'>
              <bucket>&quot;Phones&quot;</bucket>
            </map>
            <map to='#feb5a2'>
              <bucket>&quot;Supplies&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:City:nk]' palette='blue_red_brown_10_0' type='palette'>
            <map to='#3896c4'>
              <bucket>&quot;Allentown&quot;</bucket>
            </map>
            <map to='#3896c4'>
              <bucket>&quot;Arvada&quot;</bucket>
            </map>
            <map to='#3896c4'>
              <bucket>&quot;Bartlett&quot;</bucket>
            </map>
            <map to='#3896c4'>
              <bucket>&quot;Boca Raton&quot;</bucket>
            </map>
            <map to='#3896c4'>
              <bucket>&quot;Brownsville&quot;</bucket>
            </map>
            <map to='#3896c4'>
              <bucket>&quot;Carol Stream&quot;</bucket>
            </map>
            <map to='#3896c4'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#3896c4'>
              <bucket>&quot;Coachella&quot;</bucket>
            </map>
            <map to='#3896c4'>
              <bucket>&quot;Coral Springs&quot;</bucket>
            </map>
            <map to='#3896c4'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#3896c4'>
              <bucket>&quot;Dublin&quot;</bucket>
            </map>
            <map to='#3896c4'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#3896c4'>
              <bucket>&quot;Fayetteville&quot;</bucket>
            </map>
            <map to='#3896c4'>
              <bucket>&quot;Garden City&quot;</bucket>
            </map>
            <map to='#3896c4'>
              <bucket>&quot;Grapevine&quot;</bucket>
            </map>
            <map to='#3896c4'>
              <bucket>&quot;Haltom City&quot;</bucket>
            </map>
            <map to='#3896c4'>
              <bucket>&quot;Hickory&quot;</bucket>
            </map>
            <map to='#3896c4'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#3896c4'>
              <bucket>&quot;Keller&quot;</bucket>
            </map>
            <map to='#3896c4'>
              <bucket>&quot;Laguna Niguel&quot;</bucket>
            </map>
            <map to='#3896c4'>
              <bucket>&quot;Laurel&quot;</bucket>
            </map>
            <map to='#3896c4'>
              <bucket>&quot;Little Rock&quot;</bucket>
            </map>
            <map to='#3896c4'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#3896c4'>
              <bucket>&quot;Marysville&quot;</bucket>
            </map>
            <map to='#3896c4'>
              <bucket>&quot;Middletown&quot;</bucket>
            </map>
            <map to='#3896c4'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#3896c4'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#3896c4'>
              <bucket>&quot;Niagara Falls&quot;</bucket>
            </map>
            <map to='#3896c4'>
              <bucket>&quot;Odessa&quot;</bucket>
            </map>
            <map to='#3896c4'>
              <bucket>&quot;Overland Park&quot;</bucket>
            </map>
            <map to='#3896c4'>
              <bucket>&quot;Pearland&quot;</bucket>
            </map>
            <map to='#3896c4'>
              <bucket>&quot;Plantation&quot;</bucket>
            </map>
            <map to='#3896c4'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#3896c4'>
              <bucket>&quot;Renton&quot;</bucket>
            </map>
            <map to='#3896c4'>
              <bucket>&quot;Rome&quot;</bucket>
            </map>
            <map to='#3896c4'>
              <bucket>&quot;Saint Peters&quot;</bucket>
            </map>
            <map to='#3896c4'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#3896c4'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#3896c4'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#3896c4'>
              <bucket>&quot;Tempe&quot;</bucket>
            </map>
            <map to='#3896c4'>
              <bucket>&quot;Troy&quot;</bucket>
            </map>
            <map to='#3896c4'>
              <bucket>&quot;Virginia Beach&quot;</bucket>
            </map>
            <map to='#3896c4'>
              <bucket>&quot;West Allis&quot;</bucket>
            </map>
            <map to='#3896c4'>
              <bucket>&quot;Woodland&quot;</bucket>
            </map>
            <map to='#466f9d'>
              <bucket>&quot;Aberdeen&quot;</bucket>
            </map>
            <map to='#466f9d'>
              <bucket>&quot;Antioch&quot;</bucket>
            </map>
            <map to='#466f9d'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#466f9d'>
              <bucket>&quot;Bellevue&quot;</bucket>
            </map>
            <map to='#466f9d'>
              <bucket>&quot;Bozeman&quot;</bucket>
            </map>
            <map to='#466f9d'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#466f9d'>
              <bucket>&quot;Chandler&quot;</bucket>
            </map>
            <map to='#466f9d'>
              <bucket>&quot;Citrus Heights&quot;</bucket>
            </map>
            <map to='#466f9d'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#466f9d'>
              <bucket>&quot;Cuyahoga Falls&quot;</bucket>
            </map>
            <map to='#466f9d'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#466f9d'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#466f9d'>
              <bucket>&quot;Eugene&quot;</bucket>
            </map>
            <map to='#466f9d'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#466f9d'>
              <bucket>&quot;Glendale&quot;</bucket>
            </map>
            <map to='#466f9d'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#466f9d'>
              <bucket>&quot;Helena&quot;</bucket>
            </map>
            <map to='#466f9d'>
              <bucket>&quot;Homestead&quot;</bucket>
            </map>
            <map to='#466f9d'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#466f9d'>
              <bucket>&quot;Knoxville&quot;</bucket>
            </map>
            <map to='#466f9d'>
              <bucket>&quot;Lakewood&quot;</bucket>
            </map>
            <map to='#466f9d'>
              <bucket>&quot;Lehi&quot;</bucket>
            </map>
            <map to='#466f9d'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#466f9d'>
              <bucket>&quot;Manteca&quot;</bucket>
            </map>
            <map to='#466f9d'>
              <bucket>&quot;Mentor&quot;</bucket>
            </map>
            <map to='#466f9d'>
              <bucket>&quot;Mishawaka&quot;</bucket>
            </map>
            <map to='#466f9d'>
              <bucket>&quot;Morristown&quot;</bucket>
            </map>
            <map to='#466f9d'>
              <bucket>&quot;New Brunswick&quot;</bucket>
            </map>
            <map to='#466f9d'>
              <bucket>&quot;North Las Vegas&quot;</bucket>
            </map>
            <map to='#466f9d'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#466f9d'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#466f9d'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#466f9d'>
              <bucket>&quot;Port Orange&quot;</bucket>
            </map>
            <map to='#466f9d'>
              <bucket>&quot;Redding&quot;</bucket>
            </map>
            <map to='#466f9d'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#466f9d'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#466f9d'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#466f9d'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#466f9d'>
              <bucket>&quot;Smyrna&quot;</bucket>
            </map>
            <map to='#466f9d'>
              <bucket>&quot;Superior&quot;</bucket>
            </map>
            <map to='#466f9d'>
              <bucket>&quot;Thousand Oaks&quot;</bucket>
            </map>
            <map to='#466f9d'>
              <bucket>&quot;Urbandale&quot;</bucket>
            </map>
            <map to='#466f9d'>
              <bucket>&quot;Waterbury&quot;</bucket>
            </map>
            <map to='#466f9d'>
              <bucket>&quot;Wheeling&quot;</bucket>
            </map>
            <map to='#466f9d'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#91b3d7'>
              <bucket>&quot;Abilene&quot;</bucket>
            </map>
            <map to='#91b3d7'>
              <bucket>&quot;Apopka&quot;</bucket>
            </map>
            <map to='#91b3d7'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#91b3d7'>
              <bucket>&quot;Bellingham&quot;</bucket>
            </map>
            <map to='#91b3d7'>
              <bucket>&quot;Brentwood&quot;</bucket>
            </map>
            <map to='#91b3d7'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#91b3d7'>
              <bucket>&quot;Chapel Hill&quot;</bucket>
            </map>
            <map to='#91b3d7'>
              <bucket>&quot;Clarksville&quot;</bucket>
            </map>
            <map to='#91b3d7'>
              <bucket>&quot;Conroe&quot;</bucket>
            </map>
            <map to='#91b3d7'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#91b3d7'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#91b3d7'>
              <bucket>&quot;Edinburg&quot;</bucket>
            </map>
            <map to='#91b3d7'>
              <bucket>&quot;Evanston&quot;</bucket>
            </map>
            <map to='#91b3d7'>
              <bucket>&quot;Freeport&quot;</bucket>
            </map>
            <map to='#91b3d7'>
              <bucket>&quot;Glenview&quot;</bucket>
            </map>
            <map to='#91b3d7'>
              <bucket>&quot;Gresham&quot;</bucket>
            </map>
            <map to='#91b3d7'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#91b3d7'>
              <bucket>&quot;Hoover&quot;</bucket>
            </map>
            <map to='#91b3d7'>
              <bucket>&quot;Jamestown&quot;</bucket>
            </map>
            <map to='#91b3d7'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#91b3d7'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#91b3d7'>
              <bucket>&quot;Leominster&quot;</bucket>
            </map>
            <map to='#91b3d7'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#91b3d7'>
              <bucket>&quot;Maple Grove&quot;</bucket>
            </map>
            <map to='#91b3d7'>
              <bucket>&quot;Meriden&quot;</bucket>
            </map>
            <map to='#91b3d7'>
              <bucket>&quot;Mission Viejo&quot;</bucket>
            </map>
            <map to='#91b3d7'>
              <bucket>&quot;Mount Pleasant&quot;</bucket>
            </map>
            <map to='#91b3d7'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#91b3d7'>
              <bucket>&quot;North Miami&quot;</bucket>
            </map>
            <map to='#91b3d7'>
              <bucket>&quot;Orem&quot;</bucket>
            </map>
            <map to='#91b3d7'>
              <bucket>&quot;Parma&quot;</bucket>
            </map>
            <map to='#91b3d7'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#91b3d7'>
              <bucket>&quot;Port Saint Lucie&quot;</bucket>
            </map>
            <map to='#91b3d7'>
              <bucket>&quot;Redlands&quot;</bucket>
            </map>
            <map to='#91b3d7'>
              <bucket>&quot;Rochester Hills&quot;</bucket>
            </map>
            <map to='#91b3d7'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#91b3d7'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#91b3d7'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#91b3d7'>
              <bucket>&quot;South Bend&quot;</bucket>
            </map>
            <map to='#91b3d7'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#91b3d7'>
              <bucket>&quot;Tigard&quot;</bucket>
            </map>
            <map to='#91b3d7'>
              <bucket>&quot;Utica&quot;</bucket>
            </map>
            <map to='#91b3d7'>
              <bucket>&quot;Waterloo&quot;</bucket>
            </map>
            <map to='#91b3d7'>
              <bucket>&quot;Whittier&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Broken Arrow&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Canton&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chattanooga&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Coppell&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dover&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;El Cajon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fargo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Frisco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Grand Prairie&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hackensack&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hesperia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Huntington Beach&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jonesboro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;La Quinta&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Las Cruces&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Linden&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lowell&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mesquite&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Newark&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ormond Beach&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Plainfield&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Redwood City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rockville&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saint Louis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Santa Maria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vancouver&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wausau&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#a0d4ee'>
              <bucket>&quot;Altoona&quot;</bucket>
            </map>
            <map to='#a0d4ee'>
              <bucket>&quot;Asheville&quot;</bucket>
            </map>
            <map to='#a0d4ee'>
              <bucket>&quot;Bayonne&quot;</bucket>
            </map>
            <map to='#a0d4ee'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#a0d4ee'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#a0d4ee'>
              <bucket>&quot;Carrollton&quot;</bucket>
            </map>
            <map to='#a0d4ee'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#a0d4ee'>
              <bucket>&quot;College Station&quot;</bucket>
            </map>
            <map to='#a0d4ee'>
              <bucket>&quot;Corpus Christi&quot;</bucket>
            </map>
            <map to='#a0d4ee'>
              <bucket>&quot;Dearborn Heights&quot;</bucket>
            </map>
            <map to='#a0d4ee'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#a0d4ee'>
              <bucket>&quot;Elmhurst&quot;</bucket>
            </map>
            <map to='#a0d4ee'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#a0d4ee'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#a0d4ee'>
              <bucket>&quot;Great Falls&quot;</bucket>
            </map>
            <map to='#a0d4ee'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#a0d4ee'>
              <bucket>&quot;Highland Park&quot;</bucket>
            </map>
            <map to='#a0d4ee'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#a0d4ee'>
              <bucket>&quot;Kenner&quot;</bucket>
            </map>
            <map to='#a0d4ee'>
              <bucket>&quot;Lake Charles&quot;</bucket>
            </map>
            <map to='#a0d4ee'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#a0d4ee'>
              <bucket>&quot;Littleton&quot;</bucket>
            </map>
            <map to='#a0d4ee'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#a0d4ee'>
              <bucket>&quot;Mcallen&quot;</bucket>
            </map>
            <map to='#a0d4ee'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#a0d4ee'>
              <bucket>&quot;Montebello&quot;</bucket>
            </map>
            <map to='#a0d4ee'>
              <bucket>&quot;Naperville&quot;</bucket>
            </map>
            <map to='#a0d4ee'>
              <bucket>&quot;Noblesville&quot;</bucket>
            </map>
            <map to='#a0d4ee'>
              <bucket>&quot;Oklahoma City&quot;</bucket>
            </map>
            <map to='#a0d4ee'>
              <bucket>&quot;Owensboro&quot;</bucket>
            </map>
            <map to='#a0d4ee'>
              <bucket>&quot;Pembroke Pines&quot;</bucket>
            </map>
            <map to='#a0d4ee'>
              <bucket>&quot;Pleasant Grove&quot;</bucket>
            </map>
            <map to='#a0d4ee'>
              <bucket>&quot;Quincy&quot;</bucket>
            </map>
            <map to='#a0d4ee'>
              <bucket>&quot;Revere&quot;</bucket>
            </map>
            <map to='#a0d4ee'>
              <bucket>&quot;Romeoville&quot;</bucket>
            </map>
            <map to='#a0d4ee'>
              <bucket>&quot;Saint Petersburg&quot;</bucket>
            </map>
            <map to='#a0d4ee'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#a0d4ee'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#a0d4ee'>
              <bucket>&quot;Sterling Heights&quot;</bucket>
            </map>
            <map to='#a0d4ee'>
              <bucket>&quot;Texarkana&quot;</bucket>
            </map>
            <map to='#a0d4ee'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#a0d4ee'>
              <bucket>&quot;Visalia&quot;</bucket>
            </map>
            <map to='#a0d4ee'>
              <bucket>&quot;West Jordan&quot;</bucket>
            </map>
            <map to='#a0d4ee'>
              <bucket>&quot;Woodstock&quot;</bucket>
            </map>
            <map to='#ba7e45'>
              <bucket>&quot;Amarillo&quot;</bucket>
            </map>
            <map to='#ba7e45'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#ba7e45'>
              <bucket>&quot;Baytown&quot;</bucket>
            </map>
            <map to='#ba7e45'>
              <bucket>&quot;Bolingbrook&quot;</bucket>
            </map>
            <map to='#ba7e45'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#ba7e45'>
              <bucket>&quot;Cary&quot;</bucket>
            </map>
            <map to='#ba7e45'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#ba7e45'>
              <bucket>&quot;Colorado Springs&quot;</bucket>
            </map>
            <map to='#ba7e45'>
              <bucket>&quot;Costa Mesa&quot;</bucket>
            </map>
            <map to='#ba7e45'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#ba7e45'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#ba7e45'>
              <bucket>&quot;Elyria&quot;</bucket>
            </map>
            <map to='#ba7e45'>
              <bucket>&quot;Fort Collins&quot;</bucket>
            </map>
            <map to='#ba7e45'>
              <bucket>&quot;Gastonia&quot;</bucket>
            </map>
            <map to='#ba7e45'>
              <bucket>&quot;Greeley&quot;</bucket>
            </map>
            <map to='#ba7e45'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#ba7e45'>
              <bucket>&quot;Hillsboro&quot;</bucket>
            </map>
            <map to='#ba7e45'>
              <bucket>&quot;Inglewood&quot;</bucket>
            </map>
            <map to='#ba7e45'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#ba7e45'>
              <bucket>&quot;Lake Elsinore&quot;</bucket>
            </map>
            <map to='#ba7e45'>
              <bucket>&quot;Lawton&quot;</bucket>
            </map>
            <map to='#ba7e45'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#ba7e45'>
              <bucket>&quot;Malden&quot;</bucket>
            </map>
            <map to='#ba7e45'>
              <bucket>&quot;Medford&quot;</bucket>
            </map>
            <map to='#ba7e45'>
              <bucket>&quot;Milford&quot;</bucket>
            </map>
            <map to='#ba7e45'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#ba7e45'>
              <bucket>&quot;Nashua&quot;</bucket>
            </map>
            <map to='#ba7e45'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#ba7e45'>
              <bucket>&quot;Olathe&quot;</bucket>
            </map>
            <map to='#ba7e45'>
              <bucket>&quot;Oxnard&quot;</bucket>
            </map>
            <map to='#ba7e45'>
              <bucket>&quot;Pensacola&quot;</bucket>
            </map>
            <map to='#ba7e45'>
              <bucket>&quot;Pocatello&quot;</bucket>
            </map>
            <map to='#ba7e45'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#ba7e45'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#ba7e45'>
              <bucket>&quot;Roseville&quot;</bucket>
            </map>
            <map to='#ba7e45'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#ba7e45'>
              <bucket>&quot;San Marcos&quot;</bucket>
            </map>
            <map to='#ba7e45'>
              <bucket>&quot;Shelton&quot;</bucket>
            </map>
            <map to='#ba7e45'>
              <bucket>&quot;Stockton&quot;</bucket>
            </map>
            <map to='#ba7e45'>
              <bucket>&quot;Texas City&quot;</bucket>
            </map>
            <map to='#ba7e45'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#ba7e45'>
              <bucket>&quot;Waco&quot;</bucket>
            </map>
            <map to='#ba7e45'>
              <bucket>&quot;West Palm Beach&quot;</bucket>
            </map>
            <map to='#ba7e45'>
              <bucket>&quot;Woonsocket&quot;</bucket>
            </map>
            <map to='#c8133b'>
              <bucket>&quot;Andover&quot;</bucket>
            </map>
            <map to='#c8133b'>
              <bucket>&quot;Atlantic City&quot;</bucket>
            </map>
            <map to='#c8133b'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#c8133b'>
              <bucket>&quot;Bowling Green&quot;</bucket>
            </map>
            <map to='#c8133b'>
              <bucket>&quot;Bullhead City&quot;</bucket>
            </map>
            <map to='#c8133b'>
              <bucket>&quot;Cedar Rapids&quot;</bucket>
            </map>
            <map to='#c8133b'>
              <bucket>&quot;Chula Vista&quot;</bucket>
            </map>
            <map to='#c8133b'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#c8133b'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#c8133b'>
              <bucket>&quot;Delray Beach&quot;</bucket>
            </map>
            <map to='#c8133b'>
              <bucket>&quot;East Orange&quot;</bucket>
            </map>
            <map to='#c8133b'>
              <bucket>&quot;Englewood&quot;</bucket>
            </map>
            <map to='#c8133b'>
              <bucket>&quot;Fort Worth&quot;</bucket>
            </map>
            <map to='#c8133b'>
              <bucket>&quot;Gilbert&quot;</bucket>
            </map>
            <map to='#c8133b'>
              <bucket>&quot;Greensboro&quot;</bucket>
            </map>
            <map to='#c8133b'>
              <bucket>&quot;Harrisonburg&quot;</bucket>
            </map>
            <map to='#c8133b'>
              <bucket>&quot;Hollywood&quot;</bucket>
            </map>
            <map to='#c8133b'>
              <bucket>&quot;Irving&quot;</bucket>
            </map>
            <map to='#c8133b'>
              <bucket>&quot;Kirkwood&quot;</bucket>
            </map>
            <map to='#c8133b'>
              <bucket>&quot;Lakeland&quot;</bucket>
            </map>
            <map to='#c8133b'>
              <bucket>&quot;League City&quot;</bucket>
            </map>
            <map to='#c8133b'>
              <bucket>&quot;Longmont&quot;</bucket>
            </map>
            <map to='#c8133b'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#c8133b'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#c8133b'>
              <bucket>&quot;Minneapolis&quot;</bucket>
            </map>
            <map to='#c8133b'>
              <bucket>&quot;Moreno Valley&quot;</bucket>
            </map>
            <map to='#c8133b'>
              <bucket>&quot;New Albany&quot;</bucket>
            </map>
            <map to='#c8133b'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#c8133b'>
              <bucket>&quot;Omaha&quot;</bucket>
            </map>
            <map to='#c8133b'>
              <bucket>&quot;Palm Coast&quot;</bucket>
            </map>
            <map to='#c8133b'>
              <bucket>&quot;Perth Amboy&quot;</bucket>
            </map>
            <map to='#c8133b'>
              <bucket>&quot;Pompano Beach&quot;</bucket>
            </map>
            <map to='#c8133b'>
              <bucket>&quot;Rapid City&quot;</bucket>
            </map>
            <map to='#c8133b'>
              <bucket>&quot;Rio Rancho&quot;</bucket>
            </map>
            <map to='#c8133b'>
              <bucket>&quot;Round Rock&quot;</bucket>
            </map>
            <map to='#c8133b'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#c8133b'>
              <bucket>&quot;Sandy Springs&quot;</bucket>
            </map>
            <map to='#c8133b'>
              <bucket>&quot;Sioux Falls&quot;</bucket>
            </map>
            <map to='#c8133b'>
              <bucket>&quot;Summerville&quot;</bucket>
            </map>
            <map to='#c8133b'>
              <bucket>&quot;Thomasville&quot;</bucket>
            </map>
            <map to='#c8133b'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#c8133b'>
              <bucket>&quot;Warwick&quot;</bucket>
            </map>
            <map to='#c8133b'>
              <bucket>&quot;Westland&quot;</bucket>
            </map>
            <map to='#c8133b'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Arlington Heights&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bangor&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bloomington&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Broomfield&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Carlsbad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chesapeake&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Clovis&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Coral Gables&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Daytona Beach&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Draper&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Farmington&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gaithersburg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Grand Rapids&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hagerstown&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hialeah&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Huntsville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jupiter&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lindenhurst&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Marlborough&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Modesto&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Murrieta&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Newport News&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Oceanside&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Oswego&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Paterson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Plano&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Provo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint Paul&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Gabriel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Scottsdale&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Springdale&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Temecula&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Trenton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vineland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Waynesboro&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
            <map to='#e9b87f'>
              <bucket>&quot;Anaheim&quot;</bucket>
            </map>
            <map to='#e9b87f'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#e9b87f'>
              <bucket>&quot;Beaumont&quot;</bucket>
            </map>
            <map to='#e9b87f'>
              <bucket>&quot;Bossier City&quot;</bucket>
            </map>
            <map to='#e9b87f'>
              <bucket>&quot;Buffalo Grove&quot;</bucket>
            </map>
            <map to='#e9b87f'>
              <bucket>&quot;Cedar Hill&quot;</bucket>
            </map>
            <map to='#e9b87f'>
              <bucket>&quot;Chico&quot;</bucket>
            </map>
            <map to='#e9b87f'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#e9b87f'>
              <bucket>&quot;Cottage Grove&quot;</bucket>
            </map>
            <map to='#e9b87f'>
              <bucket>&quot;Deer Park&quot;</bucket>
            </map>
            <map to='#e9b87f'>
              <bucket>&quot;Eagan&quot;</bucket>
            </map>
            <map to='#e9b87f'>
              <bucket>&quot;Encinitas&quot;</bucket>
            </map>
            <map to='#e9b87f'>
              <bucket>&quot;Fort Lauderdale&quot;</bucket>
            </map>
            <map to='#e9b87f'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#e9b87f'>
              <bucket>&quot;Green Bay&quot;</bucket>
            </map>
            <map to='#e9b87f'>
              <bucket>&quot;Harlingen&quot;</bucket>
            </map>
            <map to='#e9b87f'>
              <bucket>&quot;Holland&quot;</bucket>
            </map>
            <map to='#e9b87f'>
              <bucket>&quot;Iowa City&quot;</bucket>
            </map>
            <map to='#e9b87f'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#e9b87f'>
              <bucket>&quot;Lake Forest&quot;</bucket>
            </map>
            <map to='#e9b87f'>
              <bucket>&quot;Layton&quot;</bucket>
            </map>
            <map to='#e9b87f'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#e9b87f'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#e9b87f'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#e9b87f'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#e9b87f'>
              <bucket>&quot;Moorhead&quot;</bucket>
            </map>
            <map to='#e9b87f'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#e9b87f'>
              <bucket>&quot;Normal&quot;</bucket>
            </map>
            <map to='#e9b87f'>
              <bucket>&quot;Olympia&quot;</bucket>
            </map>
            <map to='#e9b87f'>
              <bucket>&quot;Palatine&quot;</bucket>
            </map>
            <map to='#e9b87f'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#e9b87f'>
              <bucket>&quot;Pomona&quot;</bucket>
            </map>
            <map to='#e9b87f'>
              <bucket>&quot;Rancho Cucamonga&quot;</bucket>
            </map>
            <map to='#e9b87f'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#e9b87f'>
              <bucket>&quot;Roswell&quot;</bucket>
            </map>
            <map to='#e9b87f'>
              <bucket>&quot;Salinas&quot;</bucket>
            </map>
            <map to='#e9b87f'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#e9b87f'>
              <bucket>&quot;Sierra Vista&quot;</bucket>
            </map>
            <map to='#e9b87f'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#e9b87f'>
              <bucket>&quot;The Colony&quot;</bucket>
            </map>
            <map to='#e9b87f'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#e9b87f'>
              <bucket>&quot;Warner Robins&quot;</bucket>
            </map>
            <map to='#e9b87f'>
              <bucket>&quot;Westfield&quot;</bucket>
            </map>
            <map to='#e9b87f'>
              <bucket>&quot;Yonkers&quot;</bucket>
            </map>
            <map to='#ea8783'>
              <bucket>&quot;Ann Arbor&quot;</bucket>
            </map>
            <map to='#ea8783'>
              <bucket>&quot;Auburn&quot;</bucket>
            </map>
            <map to='#ea8783'>
              <bucket>&quot;Belleville&quot;</bucket>
            </map>
            <map to='#ea8783'>
              <bucket>&quot;Boynton Beach&quot;</bucket>
            </map>
            <map to='#ea8783'>
              <bucket>&quot;Burbank&quot;</bucket>
            </map>
            <map to='#ea8783'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#ea8783'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#ea8783'>
              <bucket>&quot;Commerce City&quot;</bucket>
            </map>
            <map to='#ea8783'>
              <bucket>&quot;Cranston&quot;</bucket>
            </map>
            <map to='#ea8783'>
              <bucket>&quot;Deltona&quot;</bucket>
            </map>
            <map to='#ea8783'>
              <bucket>&quot;East Point&quot;</bucket>
            </map>
            <map to='#ea8783'>
              <bucket>&quot;Escondido&quot;</bucket>
            </map>
            <map to='#ea8783'>
              <bucket>&quot;Frankfort&quot;</bucket>
            </map>
            <map to='#ea8783'>
              <bucket>&quot;Gladstone&quot;</bucket>
            </map>
            <map to='#ea8783'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#ea8783'>
              <bucket>&quot;Hattiesburg&quot;</bucket>
            </map>
            <map to='#ea8783'>
              <bucket>&quot;Holyoke&quot;</bucket>
            </map>
            <map to='#ea8783'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#ea8783'>
              <bucket>&quot;Kissimmee&quot;</bucket>
            </map>
            <map to='#ea8783'>
              <bucket>&quot;Lakeville&quot;</bucket>
            </map>
            <map to='#ea8783'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ea8783'>
              <bucket>&quot;Longview&quot;</bucket>
            </map>
            <map to='#ea8783'>
              <bucket>&quot;Mansfield&quot;</bucket>
            </map>
            <map to='#ea8783'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#ea8783'>
              <bucket>&quot;Miramar&quot;</bucket>
            </map>
            <map to='#ea8783'>
              <bucket>&quot;Morgan Hill&quot;</bucket>
            </map>
            <map to='#ea8783'>
              <bucket>&quot;New Bedford&quot;</bucket>
            </map>
            <map to='#ea8783'>
              <bucket>&quot;North Charleston&quot;</bucket>
            </map>
            <map to='#ea8783'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#ea8783'>
              <bucket>&quot;Park Ridge&quot;</bucket>
            </map>
            <map to='#ea8783'>
              <bucket>&quot;Pharr&quot;</bucket>
            </map>
            <map to='#ea8783'>
              <bucket>&quot;Port Arthur&quot;</bucket>
            </map>
            <map to='#ea8783'>
              <bucket>&quot;Reading&quot;</bucket>
            </map>
            <map to='#ea8783'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#ea8783'>
              <bucket>&quot;Royal Oak&quot;</bucket>
            </map>
            <map to='#ea8783'>
              <bucket>&quot;San Angelo&quot;</bucket>
            </map>
            <map to='#ea8783'>
              <bucket>&quot;Sanford&quot;</bucket>
            </map>
            <map to='#ea8783'>
              <bucket>&quot;Skokie&quot;</bucket>
            </map>
            <map to='#ea8783'>
              <bucket>&quot;Sunnyvale&quot;</bucket>
            </map>
            <map to='#ea8783'>
              <bucket>&quot;Thornton&quot;</bucket>
            </map>
            <map to='#ea8783'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#ea8783'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#ea8783'>
              <bucket>&quot;Westminster&quot;</bucket>
            </map>
            <map to='#ea8783'>
              <bucket>&quot;Yucaipa&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;Apple Valley&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;Avondale&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;Bethlehem&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;Bridgeton&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;Camarillo&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;Danbury&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;Des Plaines&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;Edmond&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;Everett&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;Goldsboro&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;Grove City&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;Jefferson City&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;La Mesa&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;Lansing&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;Lewiston&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;Margate&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;Meridian&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;Mount Vernon&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;New Rochelle&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;Norwich&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;Orland Park&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;Pasadena&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;Pico Rivera&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;Redmond&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;Rock Hill&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;Saint Charles&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;San Clemente&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;Southaven&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;Tamarac&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;Tinley Park&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;Vacaville&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;Watertown&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#feb5a2'>
              <bucket>&quot;Albuquerque&quot;</bucket>
            </map>
            <map to='#feb5a2'>
              <bucket>&quot;Appleton&quot;</bucket>
            </map>
            <map to='#feb5a2'>
              <bucket>&quot;Bakersfield&quot;</bucket>
            </map>
            <map to='#feb5a2'>
              <bucket>&quot;Beverly&quot;</bucket>
            </map>
            <map to='#feb5a2'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#feb5a2'>
              <bucket>&quot;Cambridge&quot;</bucket>
            </map>
            <map to='#feb5a2'>
              <bucket>&quot;Charlottesville&quot;</bucket>
            </map>
            <map to='#feb5a2'>
              <bucket>&quot;Clifton&quot;</bucket>
            </map>
            <map to='#feb5a2'>
              <bucket>&quot;Coon Rapids&quot;</bucket>
            </map>
            <map to='#feb5a2'>
              <bucket>&quot;Danville&quot;</bucket>
            </map>
            <map to='#feb5a2'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#feb5a2'>
              <bucket>&quot;Edmonds&quot;</bucket>
            </map>
            <map to='#feb5a2'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#feb5a2'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#feb5a2'>
              <bucket>&quot;Grand Island&quot;</bucket>
            </map>
            <map to='#feb5a2'>
              <bucket>&quot;Gulfport&quot;</bucket>
            </map>
            <map to='#feb5a2'>
              <bucket>&quot;Hendersonville&quot;</bucket>
            </map>
            <map to='#feb5a2'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#feb5a2'>
              <bucket>&quot;Johnson City&quot;</bucket>
            </map>
            <map to='#feb5a2'>
              <bucket>&quot;La Porte&quot;</bucket>
            </map>
            <map to='#feb5a2'>
              <bucket>&quot;Laredo&quot;</bucket>
            </map>
            <map to='#feb5a2'>
              <bucket>&quot;Lincoln Park&quot;</bucket>
            </map>
            <map to='#feb5a2'>
              <bucket>&quot;Loveland&quot;</bucket>
            </map>
            <map to='#feb5a2'>
              <bucket>&quot;Marietta&quot;</bucket>
            </map>
            <map to='#feb5a2'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#feb5a2'>
              <bucket>&quot;Missouri City&quot;</bucket>
            </map>
            <map to='#feb5a2'>
              <bucket>&quot;Murfreesboro&quot;</bucket>
            </map>
            <map to='#feb5a2'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
            <map to='#feb5a2'>
              <bucket>&quot;Oak Park&quot;</bucket>
            </map>
            <map to='#feb5a2'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#feb5a2'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#feb5a2'>
              <bucket>&quot;Pine Bluff&quot;</bucket>
            </map>
            <map to='#feb5a2'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#feb5a2'>
              <bucket>&quot;Redondo Beach&quot;</bucket>
            </map>
            <map to='#feb5a2'>
              <bucket>&quot;Rockford&quot;</bucket>
            </map>
            <map to='#feb5a2'>
              <bucket>&quot;Saint Cloud&quot;</bucket>
            </map>
            <map to='#feb5a2'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#feb5a2'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#feb5a2'>
              <bucket>&quot;Sparks&quot;</bucket>
            </map>
            <map to='#feb5a2'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#feb5a2'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#feb5a2'>
              <bucket>&quot;Vallejo&quot;</bucket>
            </map>
            <map to='#feb5a2'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#feb5a2'>
              <bucket>&quot;Wilmington&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='F1' />
        <field-sort-custom-order field='Row ID' />
        <field-sort-custom-order field='Order ID' />
        <field-sort-custom-order field='Order Date' />
        <field-sort-custom-order field='Ship Date' />
        <field-sort-custom-order field='Ship Mode' />
        <field-sort-custom-order field='Customer ID' />
        <field-sort-custom-order field='Customer Name' />
        <field-sort-custom-order field='Segment' />
        <field-sort-custom-order field='Country' />
        <field-sort-custom-order field='City' />
        <field-sort-custom-order field='State' />
        <field-sort-custom-order field='Postal Code' />
        <field-sort-custom-order field='Region' />
        <field-sort-custom-order field='Product ID' />
        <field-sort-custom-order field='Category' />
        <field-sort-custom-order field='Sub-Category' />
        <field-sort-custom-order field='Product Name' />
        <field-sort-custom-order field='Sales' />
        <field-sort-custom-order field='Calculation_595319641157980163' />
        <field-sort-custom-order field='Calculation_595319641157259266' />
        <field-sort-custom-order field='Calculation_595319641155997696' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_9759B647DB3F45EC8AF8975EA5E8CBE8'>
            <properties context=''>
              <relation connection='excel-direct.1u6duvn0ooqf9j16741p60z18u2s' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:S9801:no:A1:S9801:0' header='yes' outcome='6'>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='integer' name='Row ID' ordinal='1' />
                  <column datatype='string' name='Order ID' ordinal='2' />
                  <column datatype='string' name='Order Date' ordinal='3' />
                  <column datatype='string' name='Ship Date' ordinal='4' />
                  <column datatype='string' name='Ship Mode' ordinal='5' />
                  <column datatype='string' name='Customer ID' ordinal='6' />
                  <column datatype='string' name='Customer Name' ordinal='7' />
                  <column datatype='string' name='Segment' ordinal='8' />
                  <column datatype='string' name='Country' ordinal='9' />
                  <column datatype='string' name='City' ordinal='10' />
                  <column datatype='string' name='State' ordinal='11' />
                  <column datatype='integer' name='Postal Code' ordinal='12' />
                  <column datatype='string' name='Region' ordinal='13' />
                  <column datatype='string' name='Product ID' ordinal='14' />
                  <column datatype='string' name='Category' ordinal='15' />
                  <column datatype='string' name='Sub-Category' ordinal='16' />
                  <column datatype='string' name='Product Name' ordinal='17' />
                  <column datatype='real' name='Sales' ordinal='18' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Color_Label_Filter'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (sales_data_1)' name='federated.1f77i8j0u3ts4e1g497xv0kfptq0' />
          </datasources>
          <datasource-dependencies datasource='federated.1f77i8j0u3ts4e1g497xv0kfptq0'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1f77i8j0u3ts4e1g497xv0kfptq0].[none:Category:nk]'>
            <groupfilter function='member' level='[none:Category:nk]' member='&quot;Technology&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1f77i8j0u3ts4e1g497xv0kfptq0].[none:Sub-Category:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Tables&quot;' />
                <groupfilter function='member' level='[none:Sub-Category:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1f77i8j0u3ts4e1g497xv0kfptq0].[none:State:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1f77i8j0u3ts4e1g497xv0kfptq0].[sum:Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1f77i8j0u3ts4e1g497xv0kfptq0].[none:Category:nk]</column>
            <column>[federated.1f77i8j0u3ts4e1g497xv0kfptq0].[none:Sub-Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1f77i8j0u3ts4e1g497xv0kfptq0].[none:Sub-Category:nk]' />
              <text column='[federated.1f77i8j0u3ts4e1g497xv0kfptq0].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1f77i8j0u3ts4e1g497xv0kfptq0].[none:Category:nk] / [federated.1f77i8j0u3ts4e1g497xv0kfptq0].[none:State:nk])</rows>
        <cols>[federated.1f77i8j0u3ts4e1g497xv0kfptq0].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{F74BD64E-172E-47F4-9C4E-5657ECAD950B}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (sales_data_1)' name='federated.1f77i8j0u3ts4e1g497xv0kfptq0' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1f77i8j0u3ts4e1g497xv0kfptq0'>
            <column caption='Sales &lt; 1000' datatype='boolean' name='[Calculation_595319641157259266]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Sales] &lt; 10' />
            </column>
            <column caption='Top 10' datatype='boolean' name='[Calculation_595319641157980163]' role='measure' type='nominal'>
              <calculation class='tableau' formula='INDEX()&lt;10'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_595319641157259266]' derivation='None' name='[none:Calculation_595319641157259266:nk]' pivot='key' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_595319641157980163]' derivation='User' name='[usr:Calculation_595319641157980163:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1f77i8j0u3ts4e1g497xv0kfptq0].[none:Calculation_595319641157259266:nk]'>
            <groupfilter function='member' level='[none:Calculation_595319641157259266:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1f77i8j0u3ts4e1g497xv0kfptq0].[usr:Calculation_595319641157980163:nk]'>
            <groupfilter function='member' level='[usr:Calculation_595319641157980163:nk]' member='false' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1f77i8j0u3ts4e1g497xv0kfptq0].[none:City:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1f77i8j0u3ts4e1g497xv0kfptq0].[sum:Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1f77i8j0u3ts4e1g497xv0kfptq0].[none:Calculation_595319641157259266:nk]</column>
            <column>[federated.1f77i8j0u3ts4e1g497xv0kfptq0].[usr:Calculation_595319641157980163:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1f77i8j0u3ts4e1g497xv0kfptq0].[none:Country:nk] / [federated.1f77i8j0u3ts4e1g497xv0kfptq0].[none:City:nk])</rows>
        <cols>[federated.1f77i8j0u3ts4e1g497xv0kfptq0].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{47A20753-A9AA-45A5-8D72-FBCBFA35E40D}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Color_Label_Filter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.1f77i8j0u3ts4e1g497xv0kfptq0].[none:Sub-Category:nk]' type='filter' />
            <card mode='dropdown' param='[federated.1f77i8j0u3ts4e1g497xv0kfptq0].[none:Category:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1f77i8j0u3ts4e1g497xv0kfptq0].[none:Sub-Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1f77i8j0u3ts4e1g497xv0kfptq0].[none:Category:nk]</field>
            <field>[federated.1f77i8j0u3ts4e1g497xv0kfptq0].[none:State:nk]</field>
            <field>[federated.1f77i8j0u3ts4e1g497xv0kfptq0].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C76332B0-2275-493A-ACF3-0F54A832C46C}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1f77i8j0u3ts4e1g497xv0kfptq0].[usr:Calculation_595319641157980163:nk]' show-morefewerbutton='false' type='filter' />
            <card param='[federated.1f77i8j0u3ts4e1g497xv0kfptq0].[none:Calculation_595319641157259266:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1f77i8j0u3ts4e1g497xv0kfptq0].[none:Calculation_595319641157259266:nk]</field>
            <field>[federated.1f77i8j0u3ts4e1g497xv0kfptq0].[none:City:nk]</field>
            <field>[federated.1f77i8j0u3ts4e1g497xv0kfptq0].[none:Country:nk]</field>
            <field>[federated.1f77i8j0u3ts4e1g497xv0kfptq0].[usr:Calculation_595319641155997696:nk]</field>
            <field>[federated.1f77i8j0u3ts4e1g497xv0kfptq0].[usr:Calculation_595319641157980163:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{63C4B7C6-8A06-46A9-B270-DF647397492E}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Color_Label_Filter' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
